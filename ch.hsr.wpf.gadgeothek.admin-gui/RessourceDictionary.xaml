<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ch.hsr.wpf.gadgeothek.admin_gui">

    <Style TargetType="{x:Type Button}" x:Key="FancyButton">
        <Setter Property="Margin" Value="5 5 0 5"/>
        <Setter Property="Padding" Value="10 5 10 5"/>
        <Setter Property="Background" Value="#333333"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="tempBorder" Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#666666"/>

                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="#cccccc"/>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="FancyDataGridHeader">

        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="35" />
        <Setter Property="SeparatorBrush" Value="White" />
        <Setter Property="FontWeight" Value="Black" />
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Padding" Value="10 5 10 5"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="columnHeaderBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#555555" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="columnHeaderBorder"
		BorderThickness="1"
		Padding="3,0,3,0">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#333333" />
                                    <GradientStop Offset="1" Color="#000000" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#000000" />
                                    <GradientStop Offset="1" Color="#333333" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type DataGridRow}" x:Key="FancyDataGridRow">
        <Setter Property="Background" Value="#000000" />
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
		        SnapsToDevicePixels="True">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Offset="0" Color="#333333" />
                                <GradientStop Offset="1" Color="#111111" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
     
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#444444" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#444444" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#333333" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="#333333" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
			ItemsPanel="{TemplateBinding ItemsPanel}"
			SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <DataGridDetailsPresenter Grid.Row="1"
			Grid.Column="1"
			SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding 
 AreRowDetailsFrozen,
  ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical},
			  Converter={x:Static DataGrid.RowDetailsScrollingConverter},
			  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
			Visibility="{TemplateBinding DetailsVisibility}" />
                            <DataGridRowHeader Grid.RowSpan="2"
			SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
			Visibility="{Binding HeadersVisibility,
ConverterParameter={x:Static DataGridHeadersVisibility.Row},
   Converter={x:Static DataGrid.HeadersVisibilityConverter},
    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!--<Style TargetType="{x:Type Button}" x:Key="FancyButton2">
    <Setter Property="Margin" Value="5 5 0 5"/>
    <Setter Property="Padding" Value="10 5 10 5"/>
    <Setter Property="Background" Value="#333333"/>
    <Setter Property="Foreground" Value="White"/>
    <Setter Property="BorderThickness" Value="2"/>
    <Setter Property="BorderBrush" Value="White"/>
</Style>-->
    <Style TargetType="{x:Type TabControl}" x:Key="FancyTabControl">
        <Setter Property="Background" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>
    <Style TargetType="{x:Type DockPanel}" x:Key="FancyDockpanel">
        <Setter Property="Background" Value="Black"/>

    </Style>

    <Style TargetType="{x:Type Label}" x:Key="FancyLabel">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="FancyTextBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#333333"></Setter>
        <Setter Property="Margin" Value="0 5 0 5"></Setter>
        <Setter Property="Padding" Value="10 5 10 5"></Setter>
    </Style>
    
    <Style TargetType="{x:Type ComboBox}" x:Key="FancyComboBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="#333333"></Setter>
        <Setter Property="Margin" Value="0 5 0 5"></Setter>
        <Setter Property="Padding" Value="10 5 10 5"></Setter>
    </Style>
    
    <Style TargetType="{x:Type ComboBoxItem}" x:Key="FancyComboBoxItem">
        <Setter Property="Background" Value="#333333"/>
    </Style>

    <Style TargetType="{x:Type TabItem}" x:Key="FancyTabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Name="Panel">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2"
                                         >
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Panel" Property="Background" Value="Black" />
                            <Setter Property="Foreground" Value="White"/>

                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Panel" Property="Background" Value="#333333" />
                            <Setter Property="Foreground" Value="#cccccc"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="black" />
                <Setter Property="BorderBrush" Value="White"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>    

    <!--<Style TargetType="{x:Type Window}" x:Key="MyWindow">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="BorderThickness" Value="1"/>
    
        <Setter Property="BorderBrush" Value="#1ba1e2"/>
        <Setter Property="Title" Value="Sample Modern UI Window"/>
        <Setter Property="Height" Value="350"/>
        <Setter Property="Width" Value="525"/>
        <Setter Property="MinHeight" Value="240"/>
        <Setter Property="MinWidth" Value="320"/>
    </Style>-->

    <Style x:Key="MyDockPanel">
        <Setter Property="DockPanel.Height" Value="96"/>
        <Setter Property="DockPanel.Dock" Value="Top"/>
        <Setter Property="DockPanel.Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0, 0" EndPoint="0, 1" Opacity=".1">
                    <GradientStop Offset="0" Color="#1ba1e2" />
                    <GradientStop Offset=".3" Color="#1ba1e2" />
                    <GradientStop Offset="1" Color="Transparent" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!--<Style TargetType="Button">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>-->
    <Style TargetType="Path">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Stroke" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="QuitButton">
        <Setter Property="Button.Margin" Value="0 0 20 20"/>
        <Setter Property="Button.Width" Value="60"/>
        <Setter Property="Button.Height" Value="24"/>
        <Setter Property="Button.Background" Value="Transparent"/>
        <Setter Property="Button.BorderBrush" Value="#1ba1e2"/>
        <Setter Property="Button.Foreground" Value="#1ba1e2"/>
        <Setter Property="Button.VerticalAlignment" Value="Bottom"/>
        <Setter Property="Button.HorizontalAlignment" Value="Right"/>
    </Style>

</ResourceDictionary>